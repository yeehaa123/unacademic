var chai = require('chai');
var expect = chai.expect;
var chaiAsPromised = require('chai-as-promised');
chai.use(chaiAsPromised);

var sinon = require('sinon');

describe("switcher", function(){
  var switcher;
  var $state;
  var $q;

  beforeEach(function(){
    var Switcher = require('./switcher.js');
    $state = {};
    $q = {}
    switcher = new Switcher($state, $q);

  });

  describe("state switching", function(){
    var state;
    var response;

    describe("it has no name", function(){
      beforeEach(function(){

        state = {};

        var promise = Promise.resolve();

        $q.when = sinon.stub().returns(promise);
        $state.go = sinon.spy();
      });

      it("calls state with the correct parameters", function(){
        switcher.set().should.eventually.equal("foo");
      });


      xit("returns the success message", function(){
        expect($q.when).to.be.called;
      });
    });

    xdescribe("it has a name", function(){
      beforeEach(function(){
        state = { name: 'waypoints.detail' };
        switcher.set(state).then(function(msg){
          response = msg;
        })
      });

      it("calls state with the correct parameters", function(){
        expect($state.go).to.be.calledWithExactly(state.name, undefined);
      });

      it("returns the success message", function(){
        expect(response).to.equal('123');
      });
    });
  })
});
